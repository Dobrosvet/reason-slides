// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Slides");

function make(content, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var message = List.nth(content, self[/* state */1][/* currentSlide */0]);
              return React.createElement("div", undefined, message, React.createElement("button", {
                              onClick: (function (_event) {
                                  return Curry._1(self[/* send */3], /* PreviousSlide */0);
                                })
                            }, "<"), React.createElement("button", {
                              onClick: (function (_event) {
                                  return Curry._1(self[/* send */3], /* NextSlide */1);
                                })
                            }, ">"));
            }),
          /* initialState */(function (param) {
              return /* record */[/* currentSlide */0];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (action) {
                return /* Update */Block.__(0, [/* record */[/* currentSlide */state[/* currentSlide */0] + 1 | 0]]);
              } else {
                return /* Update */Block.__(0, [/* record */[/* currentSlide */state[/* currentSlide */0] - 1 | 0]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
