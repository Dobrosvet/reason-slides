// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Showdown = require("showdown");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("Markdown");

function make(markdown, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* converter */0][0];
              if (match !== undefined) {
                return React.createElement("div", {
                            dangerouslySetInnerHTML: {
                              __html: Caml_option.valFromOption(match).makeHtml(markdown)
                            }
                          });
              } else {
                return React.createElement("div", undefined);
              }
            }),
          /* initialState */(function (param) {
              return /* record */[/* converter : record */[/* contents */Caml_option.some(new Showdown.Converter())]];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_action, _state) {
              return /* NoUpdate */0;
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
